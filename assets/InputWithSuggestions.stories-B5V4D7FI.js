import{r as l,R as s}from"./index-RYns6xqu.js";/* empty css              */import{G as V,i as z}from"./index.esm-Dk8PHLvH.js";import{c as A}from"./index-Cm1LdsEh.js";import{I as O}from"./Input-DS6hbjNQ.js";import"./FieldWrapper-C3znly_0.js";import"./InputStatusIcon-C7TZknlp.js";import"./useFocusByTab-CGFT2N9H.js";const w=a=>a.normalize("NFD").replace(/[\u0300-\u036f]/g,""),T=({suggestions:a,onChange:x,getSuggestionLabel:n,customLabel:y,numberOfSuggestionsToShow:b=5,exactSearch:C=!1,value:u,small:i,...I})=>{const[o,r]=l.useState([]),[d,p]=l.useState(-1),[E,m]=l.useState(u?n(u):""),c=l.useRef(null),f=l.useMemo(()=>a.sort((e,t)=>n(e).localeCompare(n(t))),[a,n]),S=o.length>0,k=()=>{var e;return(e=c.current)==null?void 0:e.focus()},M=()=>{var e;m(""),(e=c.current)==null||e.focus()},N=[...E?[{icon:s.createElement(V,{size:i?"sm":"lg"}),action:M,className:"clear-icon"}]:[],...f.length>0?[{icon:s.createElement(z,{size:i?"sm":"lg"}),action:k,className:"chevron-icon"}]:[]];l.useEffect(()=>{u&&m(n(u))},[u,n]);const W=e=>{const t=w(e.currentTarget.value).trim();if(m(e.currentTarget.value),t.trim()===""){r([]);return}const h=f.filter(F=>{const D=w(n(F).toLowerCase());return C?D.startsWith(t.toLowerCase()):D.includes(t.toLowerCase())});r(h)},g=e=>{const t=o[e];m(n(t)),x(t),r([]),p(-1)},v=e=>{e.key==="ArrowDown"?p(t=>t<o.length-1?t+1:t):e.key==="ArrowUp"?p(t=>t>0?t-1:t):(e.key==="Enter"||e.key==="Tab")&&d>=0?g(d):e.key==="Escape"&&r([])},R=e=>{e.stopPropagation(),c.current&&c.current.value===""&&r(f)},Y=()=>{o.length===1?g(0):r([])},q=e=>{g(e)};return s.createElement("div",{className:"input-with-suggestions",style:{"--number-of-suggestions":b},onBlur:Y},y&&s.createElement("label",{htmlFor:I.id},y),s.createElement(O,{...I,ref:c,value:E,onChange:W,onKeyDown:v,onFocus:R,withIcons:N,small:i}),S&&o.length>0&&s.createElement("ul",{className:"suggestions-list"},o.map((e,t)=>s.createElement("li",{key:`${n(e)}-${t}`,className:A("suggestion-item",{active:t===d,small:i}),onClick:()=>q(t),onMouseDown:h=>h.preventDefault()},n(e)))))},B=[{id:"1",label:"Manuel"},{id:"2",label:"Manuela"},{id:"3",label:"Manuella"}],J={component:T,args:{small:!1,disabled:!1,readOnly:!1,onChange:()=>{},getSuggestionLabel:a=>a.label,suggestions:B},decorators:[a=>s.createElement("div",{style:{maxWidth:"20rem"}},s.createElement(a,null))],title:"core/InputWithSuggestions",tags:["autodocs"]},Q={args:{label:"Your name",type:"text",defaultValue:""}},X={args:{label:"Your name",type:"text",value:{id:"1",label:"Manuel"}}},Z={args:{label:"Your name",type:"text",disabled:!0}},L={args:{label:"Your name",type:"text",hint:"You can type Manu to have suggestions"}},ee={args:{label:"Your name",type:"text",required:!0}},te={args:{label:"Name",type:"text",required:!0,statusWithMessage:{status:"loading"}}},ne={args:{label:"Name",type:"text",required:!0,small:!0}},se=["Default","WithDefaultValue","Disabled","Hint","RequiredInput","LoadingInput","SmallInput"];export{Q as Default,Z as Disabled,L as Hint,te as LoadingInput,ee as RequiredInput,ne as SmallInput,X as WithDefaultValue,se as __namedExportsOrder,J as default};
